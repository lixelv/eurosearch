import streamlit as st
import sqlite3
import pandas as pd


def make_tup_lis(lis):
    lis = list(lis)
    for i in range(len(lis)):
        lis[i] = list(lis[i])
    return lis


def make_bool(lis):
    for i in range(len(lis)):
        for i_ in range(len(lis[i])):
            lis[i][i_] = bool(lis[i][i_]) if i_ >= 2 else lis[i][i_]
    return lis


if 'session_created' in st.session_state:
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite
    st.session_state['session_created'] = True

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
md = ''
conn = sqlite3.connect('data.db')
cursor = conn.cursor()

en = True

st.set_page_config(
    page_title="–ï–≤—Ä–æ–ø–æ–∏—Å–∫",
    page_icon="üíæ",
    layout="wide",
    initial_sidebar_state="expanded"
)

hide_streamlit_style = """
    <style>
    #MainMenu {visibility: visible}
    footer {visibility: hidden;}
    header {visibility: hidden;}
    </style>
    """
st.markdown(hide_streamlit_style, unsafe_allow_html=True)

toggle_state = st.sidebar.checkbox('–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ç–∞–±–ª–∏—Ü—ã', key='toggle_button', value=True)
user_input = st.sidebar.text_input("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:")

if user_input:
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞
    cursor.execute("SELECT * FROM data WHERE LOWER(name) LIKE '%' || LOWER(?) || '%'", (user_input,))
else:
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤–µ–ª –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    if not toggle_state:
        st.markdown('# –í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –≤ –ª–µ–≤–æ–º –æ–∫–Ω–µ.')
    cursor.execute("SELECT * FROM data")

results = make_bool(make_tup_lis(cursor.fetchall()))

# –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ cursor.description
column_names = [desc[0] for desc in cursor.description[:2]] + ['–ö–ª–∞–ø–∞–Ω', '–†–∞—Å–ø—ã–ª–∏—Ç–µ–ª—å', '–°—Ç–∞–∫–∞–Ω', '–ü—Ä—É–∂–∏–Ω–∞', '–ú–µ–¥–Ω–æ–µ –∫–æ–ª—å—Ü–æ']

# –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ö –≤ –≤–∏–¥–µ DataFrame
if not toggle_state and results and user_input:
    cursor.execute("""SELECT name,
           COUNT(name) as total_count,
           SUM(case when clapan = 0 then 1 else 0 end) as missing_clapan,
           SUM(case when raspil = 0 then 1 else 0 end) as missing_raspil,
           SUM(case when stakan = 0 then 1 else 0 end) as missing_stakan,
           SUM(case when jumper = 0 then 1 else 0 end) as missing_jumper,
           SUM(case when cupper_ring = 0 then 1 else 0 end) as missing_cupper_ring
    FROM data
    WHERE LOWER(name) LIKE '%' || LOWER(?) || '%'
    GROUP BY name;
    """, (user_input,))
    results_ = cursor.fetchall()
    for i in results_:
        md += f'## {i[0]} <font size=10>Œ£ <font color="#FFFF00">{i[1]}</font></font>\n'
        # –í—ã–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫
        for k, v in zip(['–ö–ª–∞–ø–∞–Ω', '–†–∞—Å–ø—ã–ª–∏—Ç–µ–ª—å', '–°—Ç–∞–∫–∞–Ω', '–ü—Ä—É–∂–∏–Ω–∞', '–ú–µ–¥–Ω–æ–µ –∫–æ–ª—å—Ü–æ'], i[2:]):
            md += f'- <font size=6 color="#FF0000"><b>{k} </font><font size=6>{v}</b></font>\n' if v != 0 else f'- <font size=6 color="#00FF00"><b>{k}</b></font>\n'
        # st.dataframe(df, hide_index=True, use_container_width=True)

    st.markdown(md if md else "# –§–æ—Ä—Å—É–Ω–∫–∏ –≤ –ø–æ–ª–Ω–æ–º —Å–æ—Å—Ç–∞–≤–µ!", unsafe_allow_html=True)
elif toggle_state and results:
    df = pd.DataFrame(results, columns=column_names)

    st.dataframe(df, hide_index=True, use_container_width=True)
elif user_input:
    st.markdown("# –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
